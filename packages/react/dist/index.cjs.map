{"version":3,"file":"index.cjs","sources":["../justen.js"],"sourcesContent":["import { useSyncExternalStore } from 'react';\r\n\r\nexport function createStore(createState) {\r\n  let state;\r\n  const listeners = new Set();\r\n\r\n  const setState = (partial, replace) => {\r\n    const nextState = typeof partial === 'function' ? partial(state) : partial;\r\n\r\n    const changed = replace\r\n      ? nextState !== state\r\n      : Object.keys(nextState).some((key) => state[key] !== nextState[key]);\r\n\r\n    if (!changed) return;\r\n\r\n    state = replace ? nextState : { ...state, ...nextState };\r\n    listeners.forEach((listener) => listener());\r\n  };\r\n\r\n  const getState = () => state;\r\n\r\n  const subscribe = (listener) => {\r\n    listeners.add(listener);\r\n    return () => listeners.delete(listener);\r\n  };\r\n\r\n  state = createState(setState, getState);\r\n\r\n  const useStore = (selector = (s) => s) => {\r\n    return useSyncExternalStore(\r\n      subscribe,\r\n      () => selector(getState()),\r\n      () => selector(getState())\r\n    );\r\n  };\r\n\r\n  useStore.getState = getState;\r\n  useStore.setState = setState;\r\n  useStore.subscribe = subscribe;\r\n\r\n  return useStore;\r\n}\r\n"],"names":["createState","state","listeners","Set","setState","partial","replace","nextState","Object","keys","some","key","forEach","listener","getState","subscribe","add","delete","useStore","selector","s","useSyncExternalStore"],"mappings":"wDAEO,SAAqBA,GAC1B,IAAIC,EACJ,MAAMC,EAAY,IAAIC,IAEhBC,EAAW,CAACC,EAASC,KACzB,MAAMC,EAA+B,mBAAZF,EAAyBA,EAAQJ,GAASI,GAEnDC,EACZC,IAAcN,EACdO,OAAOC,KAAKF,GAAWG,KAAMC,GAAQV,EAAMU,KAASJ,EAAUI,OAIlEV,EAAQK,EAAUC,EAAY,IAAKN,KAAUM,GAC7CL,EAAUU,QAASC,GAAaA,OAG5BC,EAAW,IAAMb,EAEjBc,EAAaF,IACjBX,EAAUc,IAAIH,GACP,IAAMX,EAAUe,OAAOJ,IAGhCZ,EAAQD,EAAYI,EAAUU,GAE9B,MAAMI,EAAW,CAACC,EAAYC,GAAMA,IAC3BC,EAAAA,qBACLN,EACA,IAAMI,EAASL,KACf,IAAMK,EAASL,MAQnB,OAJAI,EAASJ,SAAWA,EACpBI,EAASd,SAAWA,EACpBc,EAASH,UAAYA,EAEdG,CACT"}